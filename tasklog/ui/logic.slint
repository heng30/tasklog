import { Store,  SettingPreference, SettingProxy, TabIndex, PopupIndex, SettingDetailIndex, RecordState, RecordEntry } from "store.slint";

import { SideBarEntry } from "base/def.slint";

export global Logic {
    callback update-cache-size();
    callback remove-all-cache();

    callback copy-to-clipboard(text: string);
    callback paste-from-clipboard() -> string;

    callback get-setting-preference() -> SettingPreference;
    callback set-setting-preference(setting: SettingPreference);

    callback get-setting-proxy() -> SettingProxy;
    callback set-setting-proxy(setting: SettingProxy);

    callback increase-font-size();
    callback decrease-font-size();

    pure callback inner-tr(is-cn: bool, text: string) -> string;
    inner-tr(is-cn, text) => {
        return text;
    }

    pure public function tr(text: string) -> string {
        inner-tr(Store.is-cn, text)
    }

    public function switch-setting-detail(index: SettingDetailIndex) {
        if (Store.current-setting-detail-index == index) {
            return;
        }
        Store.current-setting-detail-index = index;
    }

    public function switch-tab(index: TabIndex) {
        if (Store.current-tab-index == index) {
            return;
        }
        if (index == TabIndex.Back) {
            Store.current-tab-index = Store.previous-tab-index;
        } else {
            Store.previous-tab-index = Store.current-tab-index;
            Store.current-tab-index = index;
        }
    }

    public function switch-popup(index: PopupIndex) {
        Store.current-popup-index = index;
    }

    //////////////////////////////// Logic Start  ////////////////////////////////

    callback refresh-records();
    callback new-record(entry: RecordEntry);
    callback update-record(entry: RecordEntry);
    callback delete-record(index: int);
    callback search-record(keyword: string);
    callback update-record-state(state: RecordState);
    callback open-record-dialog(index: int);

    pure callback remain-days(start_day: string, end_day: string) -> int;
    pure callback remain-days-numbers(start_day: string, end_day: string) -> [int];
    remain-days-numbers(start-date, end-date) => {
        return [4, 5, 8];
    }


    //////////////////////////////// Logic End  ////////////////////////////////
}
